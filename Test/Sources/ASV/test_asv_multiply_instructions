
#name <Tmp$Dir>.^.^.test_asv_multiply_instructions

#area test,code

; VMUL

VMUL.I8    Q1,Q2,Q3 ; Q1=Q2 * Q3 (SIMD, 16*8)
VMUL.I16   Q1,Q2,Q3 ; Q1=Q2 * Q3 (SIMD, 8*16)
VMUL.I32   Q1,Q2,Q3 ; Q1=Q2 * Q3 (SIMD, 4*32)
VMUL.P8    Q1,Q2,Q3 ; Q1=Q2 * Q3 (SIMD, 16*8)

VMUL.I8    D1,D2,D3 ; D1=D2 * D3 (SIMD, 16*8)
VMUL.I16   D1,D2,D3 ; D1=D2 * D3 (SIMD, 8*16)
VMUL.I32   D1,D2,D3 ; D1=D2 * D3 (SIMD, 4*32)
VMUL.P8    D1,D2,D3 ; D1=D2 * D3 (SIMD, 16*8)

VMUL.F32   Q1,Q2,Q3 ; Q1=Q2 * Q3 (SIMD, 4*32)
VMUL.F32   D1,D2,D3 ; D1=D2 * D3 (SIMD, 2*32)

VMUL.F64   D1,D2,D3 ; D1=D2 * D3 (VFP)
VMULEQ.F64 D1,D2,D3 ; D1=D2 * D3 (VFP)

VMUL.F32   S1,S2,S3 ; S1=S2 * S3 (VFP)
VMULEQ.F32 S1,S2,S3 ; S1=S2 * S3 (VFP)

; VMULL

VMULL.S8    Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 16*8)
VMULL.S16   Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 8*16)
VMULL.S32   Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 4*32)
VMULL.U8    Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 16*8)
VMULL.U16   Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 8*16)
VMULL.U32   Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 4*32)
VMULL.P8    Q1,D2,D3 ; Q1=D2 * D3 (SIMD, 16*8)

; VNMUL

VNMUL.F64   D1,D2,D3 ; D1=-(D2 * D3) (VFP)
VNMULEQ.F64 D1,D2,D3 ; D1=-(D2 * D3) (VFP)

VNMUL.F32   S1,S2,S3 ; S1=-(S2 * S3) (VFP)
VNMULEQ.F32 S1,S2,S3 ; S1=-(S2 * S3) (VFP)

; VMLA

VMLA.I8     Q1,Q2,Q3 ; Q1+=Q2 * Q3 (SIMD, 16*8)
VMLA.I16    Q1,Q2,Q3 ; Q1+=Q2 * Q3 (SIMD, 8*16)
VMLA.I32    Q1,Q2,Q3 ; Q1+=Q2 * Q3 (SIMD, 4*32)
VMLA.F32    Q1,Q2,Q3 ; Q1+=Q2 * Q3 (SIMD, 4*32)

VMLA.I8     D1,D2,D3 ; D1+=D2 * D3 (SIMD, 8*8)
VMLA.I16    D1,D2,D3 ; D1+=D2 * D3 (SIMD, 4*16)
VMLA.I32    D1,D2,D3 ; D1+=D2 * D3 (SIMD, 2*32)
VMLA.F32    D1,D2,D3 ; D1+=D2 * D3 (SIMD, 2*32)

VMLA.F64    D1,D2,D3 ; D1+=D2 * D3 (VFP)
VMLAEQ.F64  D1,D2,D3 ; D1+=D2 * D3 (VFP)

VMLA.F32    S1,S2,S3 ; S1+=S2 * S3 (VFP)
VMLAEQ.F32  S1,S2,S3 ; S1+=S2 * S3 (VFP)

; VMLAL

VMLAL.S8    Q1,D2,D3 ; Q1+=D2 * D3 (SIMD, 8*8)
VMLAL.S16   Q1,D2,D3 ; Q1+=D2 * D3 (SIMD, 4*16)
VMLAL.S32   Q1,D2,D3 ; Q1+=D2 * D3 (SIMD, 2*32)
VMLAL.U8    Q1,D2,D3 ; Q1+=D2 * D3 (SIMD, 8*8)
VMLAL.U16   Q1,D2,D3 ; Q1+=D2 * D3 (SIMD, 4*16)
VMLAL.U32   Q1,D2,D3 ; Q1+=D2 * D3 (SIMD, 2*32)

; VNMLA

VNMLA.F64   D1,D2,D3 ; D1=-D1-(D2 * D3) (VFP)
VNMLAEQ.F64 D1,D2,D3 ; D1=-D1-(D2 * D3) (VFP)

VNMLA.F32   S1,S2,S3 ; S1=-S1-(S2 * S3) (VFP)
VNMLAEQ.F32 S1,S2,S3 ; S1=-S1-(S2 * S3) (VFP)

; VMLS

VMLS.I8     Q1,Q2,Q3 ; Q1-=Q2 * Q3 (SIMD, 16*8)
VMLS.I16    Q1,Q2,Q3 ; Q1-=Q2 * Q3 (SIMD, 8*16)
VMLS.I32    Q1,Q2,Q3 ; Q1-=Q2 * Q3 (SIMD, 4*32)
VMLS.F32    Q1,Q2,Q3 ; Q1-=Q2 * Q3 (SIMD, 4*32)

VMLS.I8     D1,D2,D3 ; D1-=D2 * D3 (SIMD, 8*8)
VMLS.I16    D1,D2,D3 ; D1-=D2 * D3 (SIMD, 4*16)
VMLS.I32    D1,D2,D3 ; D1-=D2 * D3 (SIMD, 2*32)
VMLS.F32    D1,D2,D3 ; D1-=D2 * D3 (SIMD, 2*32)

VMLS.F64    D1,D2,D3 ; D1-=D2 * D3 (VFP)
VMLSEQ.F64  D1,D2,D3 ; D1-=D2 * D3 (VFP)

VMLS.F32    S1,S2,S3 ; S1-=S2 * S3 (VFP)
VMLSEQ.F32  S1,S2,S3 ; S1-=S2 * S3 (VFP)

; VMLSL

VMLSL.S8    Q1,D2,D3 ; Q1-=D2 * D3 (SIMD, 8*8)
VMLSL.S16   Q1,D2,D3 ; Q1-=D2 * D3 (SIMD, 4*16)
VMLSL.S32   Q1,D2,D3 ; Q1-=D2 * D3 (SIMD, 2*32)
VMLSL.U8    Q1,D2,D3 ; Q1-=D2 * D3 (SIMD, 8*8)
VMLSL.U16   Q1,D2,D3 ; Q1-=D2 * D3 (SIMD, 4*16)
VMLSL.U32   Q1,D2,D3 ; Q1-=D2 * D3 (SIMD, 2*32)

; VNMLS

VNMLS.F64   D1,D2,D3 ; D1=-D1+(D2 * D3) (VFP)
VNMLSEQ.F64 D1,D2,D3 ; D1=-D1+(D2 * D3) (VFP)

VNMLS.F32   S1,S2,S3 ; S1=-S1+(S2 * S3) (VFP)
VNMLSEQ.F32 S1,S2,S3 ; S1=-S1+(S2 * S3) (VFP)

; VQDMULL

VQDMULL.S16 Q1,D2,D3 ; Q1=(D2 * D3) * 2 (SIMD, 4*16)
VQDMULL.S32 Q1,D2,D3 ; Q1=(D2 * D3) * 2 (SIMD, 2*32)

; VQDMULH

VQDMULH.S16 Q1,Q2,Q3 ; Q1=(Q2 * Q3) * 2 (SIMD, 8*16)
VQDMULH.S32 Q1,Q2,Q3 ; Q1=(Q2 * Q3) * 2 (SIMD, 4*32)

VQDMULH.S16 D1,D2,D3 ; D1=(D2 * D3) * 2 (SIMD, 8*16)
VQDMULH.S32 D1,D2,D3 ; D1=(D2 * D3) * 2 (SIMD, 4*32)

; VQRDMULH

VQRDMULH.S16 Q1,Q2,Q3 ; Q1=(Q2 * Q3) * 2 (SIMD, 8*16)
VQRDMULH.S32 Q1,Q2,Q3 ; Q1=(Q2 * Q3) * 2 (SIMD, 4*32)

VQRDMULH.S16 D1,D2,D3 ; D1=(D2 * D3) * 2 (SIMD, 8*16)
VQRDMULH.S32 D1,D2,D3 ; D1=(D2 * D3) * 2 (SIMD, 4*32)

; VQDMLAL

VQDMLAL.S16 Q1,D2,D3 ; Q1+=(D2 * D3) * 2 (SIMD, 4*16)
VQDMLAL.S32 Q1,D2,D3 ; Q1+=(D2 * D3) * 2 (SIMD, 2*32)

; VQDMLSL

VQDMLSL.S16 Q1,D2,D3 ; Q1-=(D2 * D3) * 2 (SIMD, 4*16)
VQDMLSL.S32 Q1,D2,D3 ; Q1-=(D2 * D3) * 2 (SIMD, 2*32)

#end
