
#name <Tmp$Dir>.^.^.test_asv_comparison_instructions

#area test,code

; VCMP

VCMP.F64   D1,D2 ; D1 == D2 (VFP)
VCMPEQ.F64 D1,D2 ; D1 == D2 (VFP)

VCMP.F32   S1,S2 ; S1 == S2 (VFP)
VCMPEQ.F32 S1,S2 ; S1 == S2 (VFP)

VCMP.F64   D1,#0.0 ; D1 == 0 (VFP)
VCMPEQ.F64 D1,#0.0 ; D1 == 0 (VFP)

VCMP.F32   S1,#0.0 ; S1 == 0 (VFP)
VCMPEQ.F32 S1,#0.0 ; S1 == 0 (VFP)

; VCMPE

VCMPE.F64   D1,D2 ; D1 == D2 (VFP)
VCMPEEQ.F64 D1,D2 ; D1 == D2 (VFP)

VCMPE.F32   S1,S2 ; S1 == S2 (VFP)
VCMPEEQ.F32 S1,S2 ; S1 == S2 (VFP)

VCMPE.F64   D1,#0.0 ; D1 == 0 (VFP)
VCMPEEQ.F64 D1,#0.0 ; D1 == 0 (VFP)

VCMPE.F32   S1,#0.0 ; S1 == 0 (VFP)
VCMPEEQ.F32 S1,#0.0 ; S1 == 0 (VFP)

; VACGT

VACGT.F32  Q1,Q2,Q3 ; Q1=abs(Q2) > abs(Q3) (SIMD, 4*32)
VACGT.F32  D1,D2,D3 ; D1=abs(D2) > abs(D3) (SIMD, 4*32)

; VACLT

VACLT.F32  Q1,Q2,Q3 ; Q1=abs(Q2) < abs(Q3) (SIMD, 4*32)
VACLT.F32  D1,D2,D3 ; D1=abs(D2) < abs(D3) (SIMD, 4*32)

; VACGE

VACGE.F32  Q1,Q2,Q3 ; Q1=abs(Q2) >= abs(Q3) (SIMD, 4*32)
VACGE.F32  D1,D2,D3 ; D1=abs(D2) >= abs(D3) (SIMD, 4*32)

; VACLE

VACLE.F32  Q1,Q2,Q3 ; Q1=abs(Q2) <= abs(Q3) (SIMD, 4*32)
VACLE.F32  D1,D2,D3 ; D1=abs(D2) <= abs(D3) (SIMD, 4*32)

; VCEQ

VCEQ.I8    Q1,Q2,Q3 ; Q1=Q2 == Q3 (SIMD, 16*8)
VCEQ.I16   Q1,Q2,Q3 ; Q1=Q2 == Q3 (SIMD, 8*16)
VCEQ.I32   Q1,Q2,Q3 ; Q1=Q2 == Q3 (SIMD, 4*32)
VCEQ.F32   Q1,Q2,Q3 ; Q1=Q2 == Q3 (SIMD, 4*32)

VCEQ.I8    D1,D2,D3 ; D1=D2 == D3 (SIMD, 16*8)
VCEQ.I16   D1,D2,D3 ; D1=D2 == D3 (SIMD, 8*16)
VCEQ.I32   D1,D2,D3 ; D1=D2 == D3 (SIMD, 4*32)
VCEQ.F32   D1,D2,D3 ; D1=D2 == D3 (SIMD, 4*32)

VCEQ.I8    Q1,Q2,#0 ; Q1=Q2 == 0 (SIMD, 16*8)
VCEQ.I16   Q1,Q2,#0 ; Q1=Q2 == 0 (SIMD, 8*16)
VCEQ.I32   Q1,Q2,#0 ; Q1=Q2 == 0 (SIMD, 4*32)
VCEQ.F32   Q1,Q2,#0 ; Q1=Q2 == 0 (SIMD, 4*32)

VCEQ.I8    D1,D2,#0 ; D1=D2 == 0 (SIMD, 16*8)
VCEQ.I16   D1,D2,#0 ; D1=D2 == 0 (SIMD, 8*16)
VCEQ.I32   D1,D2,#0 ; D1=D2 == 0 (SIMD, 4*32)
VCEQ.F32   D1,D2,#0 ; D1=D2 == 0 (SIMD, 4*32)

; VCGT

VCGT.S8    Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 16*8)
VCGT.S16   Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 8*16)
VCGT.S32   Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 4*32)
VCGT.U8    Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 16*8)
VCGT.U16   Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 8*16)
VCGT.U32   Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 4*32)
VCGT.F32   Q1,Q2,Q3 ; Q1=Q2 > Q3 (SIMD, 4*32)

VCGT.S8    D1,D2,D3 ; D1=D2 > D3 (SIMD, 8*8)
VCGT.S16   D1,D2,D3 ; D1=D2 > D3 (SIMD, 4*16)
VCGT.S32   D1,D2,D3 ; D1=D2 > D3 (SIMD, 2*32)
VCGT.U8    D1,D2,D3 ; D1=D2 > D3 (SIMD, 8*8)
VCGT.U16   D1,D2,D3 ; D1=D2 > D3 (SIMD, 4*16)
VCGT.U32   D1,D2,D3 ; D1=D2 > D3 (SIMD, 2*32)
VCGT.F32   D1,D2,D3 ; D1=D2 > D3 (SIMD, 2*32)

VCGT.S8    Q1,Q2,#0 ; Q1=Q2 > 0 (SIMD, 16*8)
VCGT.S16   Q1,Q2,#0 ; Q1=Q2 > 0 (SIMD, 8*16)
VCGT.S32   Q1,Q2,#0 ; Q1=Q2 > 0 (SIMD, 4*32)
VCGT.F32   Q1,Q2,#0 ; Q1=Q2 > 0 (SIMD, 4*32)

VCGT.S8    D1,D2,#0 ; D1=D2 > 0 (SIMD, 8*8)
VCGT.S16   D1,D2,#0 ; D1=D2 > 0 (SIMD, 4*16)
VCGT.S32   D1,D2,#0 ; D1=D2 > 0 (SIMD, 2*32)
VCGT.F32   D1,D2,#0 ; D1=D2 > 0 (SIMD, 2*32)

; VCLT

VCLT.S8    Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 16*8)
VCLT.S16   Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 8*16)
VCLT.S32   Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 4*32)
VCLT.U8    Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 16*8)
VCLT.U16   Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 8*16)
VCLT.U32   Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 4*32)
VCLT.F32   Q1,Q2,Q3 ; Q1=Q2 < Q3 (SIMD, 4*32)

VCLT.S8    D1,D2,D3 ; D1=D2 < D3 (SIMD, 8*8)
VCLT.S16   D1,D2,D3 ; D1=D2 < D3 (SIMD, 4*16)
VCLT.S32   D1,D2,D3 ; D1=D2 < D3 (SIMD, 2*32)
VCLT.U8    D1,D2,D3 ; D1=D2 < D3 (SIMD, 8*8)
VCLT.U16   D1,D2,D3 ; D1=D2 < D3 (SIMD, 4*16)
VCLT.U32   D1,D2,D3 ; D1=D2 < D3 (SIMD, 2*32)
VCLT.F32   D1,D2,D3 ; D1=D2 < D3 (SIMD, 2*32)

VCLT.S8    Q1,Q2,#0 ; Q1=Q2 < 0 (SIMD, 16*8)
VCLT.S16   Q1,Q2,#0 ; Q1=Q2 < 0 (SIMD, 8*16)
VCLT.S32   Q1,Q2,#0 ; Q1=Q2 < 0 (SIMD, 4*32)
VCLT.F32   Q1,Q2,#0 ; Q1=Q2 < 0 (SIMD, 4*32)

VCLT.S8    D1,D2,#0 ; D1=D2 < 0 (SIMD, 8*8)
VCLT.S16   D1,D2,#0 ; D1=D2 < 0 (SIMD, 4*16)
VCLT.S32   D1,D2,#0 ; D1=D2 < 0 (SIMD, 2*32)
VCLT.F32   D1,D2,#0 ; D1=D2 < 0 (SIMD, 2*32)

; VCGE

VCGE.S8    Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 16*8)
VCGE.S16   Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 8*16)
VCGE.S32   Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 4*32)
VCGE.U8    Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 16*8)
VCGE.U16   Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 8*16)
VCGE.U32   Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 4*32)
VCGE.F32   Q1,Q2,Q3 ; Q1=Q2 >= Q3 (SIMD, 4*32)

VCGE.S8    D1,D2,D3 ; D1=D2 >= D3 (SIMD, 8*8)
VCGE.S16   D1,D2,D3 ; D1=D2 >= D3 (SIMD, 4*16)
VCGE.S32   D1,D2,D3 ; D1=D2 >= D3 (SIMD, 2*32)
VCGE.U8    D1,D2,D3 ; D1=D2 >= D3 (SIMD, 8*8)
VCGE.U16   D1,D2,D3 ; D1=D2 >= D3 (SIMD, 4*16)
VCGE.U32   D1,D2,D3 ; D1=D2 >= D3 (SIMD, 2*32)
VCGE.F32   D1,D2,D3 ; D1=D2 >= D3 (SIMD, 2*32)

VCGE.S8    Q1,Q2,#0 ; Q1=Q2 >= 0 (SIMD, 16*8)
VCGE.S16   Q1,Q2,#0 ; Q1=Q2 >= 0 (SIMD, 8*16)
VCGE.S32   Q1,Q2,#0 ; Q1=Q2 >= 0 (SIMD, 4*32)
VCGE.F32   Q1,Q2,#0 ; Q1=Q2 >= 0 (SIMD, 4*32)

VCGE.S8    D1,D2,#0 ; D1=D2 >= 0 (SIMD, 8*8)
VCGE.S16   D1,D2,#0 ; D1=D2 >= 0 (SIMD, 4*16)
VCGE.S32   D1,D2,#0 ; D1=D2 >= 0 (SIMD, 2*32)
VCGE.F32   D1,D2,#0 ; D1=D2 >= 0 (SIMD, 2*32)

; VCLE

VCLE.S8    Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 16*8)
VCLE.S16   Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 8*16)
VCLE.S32   Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 4*32)
VCLE.U8    Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 16*8)
VCLE.U16   Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 8*16)
VCLE.U32   Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 4*32)
VCLE.F32   Q1,Q2,Q3 ; Q1=Q2 <= Q3 (SIMD, 4*32)

VCLE.S8    D1,D2,D3 ; D1=D2 <= D3 (SIMD, 8*8)
VCLE.S16   D1,D2,D3 ; D1=D2 <= D3 (SIMD, 4*16)
VCLE.S32   D1,D2,D3 ; D1=D2 <= D3 (SIMD, 2*32)
VCLE.U8    D1,D2,D3 ; D1=D2 <= D3 (SIMD, 8*8)
VCLE.U16   D1,D2,D3 ; D1=D2 <= D3 (SIMD, 4*16)
VCLE.U32   D1,D2,D3 ; D1=D2 <= D3 (SIMD, 2*32)
VCLE.F32   D1,D2,D3 ; D1=D2 <= D3 (SIMD, 2*32)

VCLE.S8    Q1,Q2,#0 ; Q1=Q2 <= 0 (SIMD, 16*8)
VCLE.S16   Q1,Q2,#0 ; Q1=Q2 <= 0 (SIMD, 8*16)
VCLE.S32   Q1,Q2,#0 ; Q1=Q2 <= 0 (SIMD, 4*32)
VCLE.F32   Q1,Q2,#0 ; Q1=Q2 <= 0 (SIMD, 4*32)

VCLE.S8    D1,D2,#0 ; D1=D2 <= 0 (SIMD, 8*8)
VCLE.S16   D1,D2,#0 ; D1=D2 <= 0 (SIMD, 4*16)
VCLE.S32   D1,D2,#0 ; D1=D2 <= 0 (SIMD, 2*32)
VCLE.F32   D1,D2,#0 ; D1=D2 <= 0 (SIMD, 2*32)

; VTST

VTST.8     Q1,Q2,Q3 ; Q1=bool(Q2 & Q3) (SIMD, 16*8)
VTST.16    Q1,Q2,Q3 ; Q1=bool(Q2 & Q3) (SIMD, 8*16)
VTST.32    Q1,Q2,Q3 ; Q1=bool(Q2 & Q3) (SIMD, 4*32)

VTST.8     D1,D2,D3 ; D1=bool(D2 & D3) (SIMD, 8*8)
VTST.16    D1,D2,D3 ; D1=bool(D2 & D3) (SIMD, 4*16)
VTST.32    D1,D2,D3 ; D1=bool(D2 & D3) (SIMD, 2*32)

#end
