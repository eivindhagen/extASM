
; >-------------------------------------------------------------<

.Initialise
   STMFD    R13!,{R4-R8,R14}
   BL       Initialise_Data
   BL       Start_Wimp_Task
   BL       Install_Exception_Handler
   BL       Load_Messages_File
   BL       Create_Icon_Bar_Icon
   LDMFD    R13!,{R4-R8,R15}

; >-------------------------------------------------------------<

.Initialise_Data
   STMFD    R13!,{R14}
   ADR      R0,Empty_Str
   STR      R0,Source_Filename
   STR      R0,Source_LeafName
   MOV      R1,#0
   STR      R1,Source_Line
   MVN      R0,#0
   STR      R0,Menu_Item_Ticked
   STR      R1,Stat_Data_Ready
   STR      R1,Menu_Count
   ADR      R0,Ind_Block
   STR      R0,Ind_Pointer
   ADR      R0,Menu_Block
   STR      R0,Max_Menu_Pointer
   ADR      R0,Flex_Heap
   STR      R0,Flex_Array
   STR      R1,Flex_Blocks
   STR      R1,MemTop
   ; Read extASM path
   ;
   ADR      R0,extASM_DirVar
   ADR      R1,extASM_Path
   MOV      R2,#&100
   MOV      R3,#0
   SWI      OS_ReadVarVal
   MOV      R0,#0
   STRB     R0,[R1,R2]

   LDR      R0,Ind_Pointer
   STR      R0,PieRadius_Pointer
   ADD      R0,R0,#4
   STR      R0,MinLines_Pointer

   BL       Read_Screen_Size

   LDMFD    R13!,{R15}

.extASM_Dir    DCB   "!extASM",0
   ALIGN

; >-------------------------------------------------------------<

.Start_Wimp_Task
   STMFD    R13!,{R14}
   BL       Get_Wimp_Version
   LDR      R1,Task_String
   ADR      R2,Task_Name
   ADR      R3,Message_List
   SWI      Wimp_Initialise            ; Start task
   STR      R1,Task_Handle
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Get_Wimp_Version                      ; ~R0 = Wimp version * 100
   STMFD    R13!,{R4,R14}
   ADR      R0,RMEnsure_Str
   SWI      OS_CLI                     ; Perform RMEnsure
   ADR      R0,RO2_Var
   ADR      R1,Block
   MOV      R2,#&100
   MOV      R3,#0
   SWI      XOS_ReadVarVal             ; Read RO2 variable
   CMP      R2,#0                      ; Does it exist?
   MOVEQ    R0,#1
   MOVNE    R0,#0
   STR      R0,RO3_Flag
   MOVEQ    R4,#300
   MOVNE    R4,#200
   BEQ      Init_Not_RO2
   ADR      R0,RO2_Var
   MVN      R2,#0
   MOV      R3,#0
   SWI      OS_SetVarVal               ; Delete RO2 variable

.Init_Not_RO2
   MOV      R0,R4
   LDMFD    R13!,{R4,R15}

.RMEnsure_Str  DCB   "RMEnsure UtilityModule 3.00 Set RO2 1",0
.RO2_Var       DCB   "RO2",0
   ALIGN

; >-------------------------------------------------------------<

.Load_Messages_File
   ADR      R1,Messages_File
   SWI      MessageTrans_FileInfo
   CMP      R2,#Message_Size
   ADRGT    R0,Messages_File_Error
   SWIGT    OS_GenerateError
   ADR      R0,Ctrl_Block
   ADR      R1,Messages_File
   ADR      R2,Message_Block
   SWI      MessageTrans_OpenFile
   SWI      MessageTrans_CloseFile
   MOV      R15,R14

.Messages_File_Error
   DCD      0
   DCB      "No room to load Messages file",0
.Messages_File DCB   "|<extASM$Dir>.Resources.Messages",0
   ALIGN

; >-------------------------------------------------------------<

.Create_Icon_Bar_Icon
   STMFD    R13!,{R14}
   MVN      R0,#0
   MOV      R1,#0
   MOV      R2,#0
   MOV      R3,#68
   MOV      R4,#68
   ADR      R5,extASM_Dir
   MVN      R6,#0
   MOV      R7,#0
   MOV      R8,#&301A
   STMFD    R13!,{R4-R8}
   BL       Create_Icon
   ADD      R13,R13,#20
   STR      R0,Handle_BARICON
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Init_Flex_Blocks
   STMFD    R13!,{R14}

   ; Flex blocks done in reverse order to minimize amount of memory moved
   ;
   MOV      R4,#Flex_String

.IFB_Loop
   CMP      R4,#Flex_Offset
   SUBEQ    R4,R4,#2
   BLEQ     Wimp_Text_ClearAll
   MOV      R0,R4
   MOV      R1,#0
   BL       Flex_Resize
   SUB      R4,R4,#1
   CMP      R4,#Flex_Source
   BGE      IFB_Loop
   MOV      R0,#0
   STR      R0,Source_Num_Offset
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

   ; Format of Flex_SourceName
   ; -------------------------
   ; +0  - Previous offset            (written at [01])
   ; +4  - Next sequential offset
   ; +8  - Current line               (written at [01])
   ; +12 - Filename, zero terminated
   ; etc. (Next record is aligned)
   ;
.Add_Source_Name                       ;_R0-> Source filename (ctrl-terminated)
   STMFD    R13!,{R4,R5,R14}
   MOV      R4,R0
   MOV      R0,#Flex_SourceName
   BL       Flex_Size
   LDR      R5,Source_Num_Offset
   ADD      R2,R5,#&100
   CMP      R2,R1
   MOVGT    R0,#Flex_SourceName
   MOVGT    R1,#SourceName_Step
   BLGT     Flex_Adjust
   MOV      R2,R4
   ADD      R4,R0,R5
   ADD      R1,R4,#12
   MOV      R0,R2
   STR      R1,Source_Filename
   BL       StrCopyCtrl
   TST      R1,#3
   BICNE    R1,R1,#3
   ADDNE    R1,R1,#4
   SUB      R0,R1,R4
   ADD      R5,R5,R0
   STR      R5,Source_Num_Offset
   STR      R5,[R4,#4]
   LDMFD    R13!,{R4,R5,R15}

; >-------------------------------------------------------------<

.Source_Start
   STMFD    R13!,{R14}
   MOV      R0,#Flex_SourceName
   BL       Flex_Adr
   LDR      R2,Source_Count_Offset
   LDR      R1,Source_Current_Offset   ; Store Current_Offset as Previous_Offset of
   STR      R1,[R0,R2]!                ; Count_Offset
   STR      R2,Source_Current_Offset   ; Set Current_Offset to Count_Offset
   LDR      R1,[R0,#4]
   STR      R1,Source_Count_Offset     ; Set Count_Offset to next sequential offset
   LDR      R1,Source_Line
   STR      R1,[R0,#8]                 ; Store Source_Line to Previous_Line of Count_Offset
   MOV      R1,#1
   STR      R1,Source_Line             ; Set Source_Line to 1
   ADD      R0,R0,#12
   STR      R0,Source_Filename         ; Set Source_Filename to Filename of Count_Offset
   BL       Find_LeafName
   STR      R0,Source_LeafName
   MOV      R8,#':'
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Source_End
   STMFD    R13!,{R14}
   MOV      R0,#Flex_SourceName
   BL       Flex_Adr
   MOV      R3,R0
   LDR      R1,Source_Current_Offset
   LDR      R2,[R0,R1]!
   STR      R2,Source_Current_Offset   ; Set Current_Offset to Previous of Current_Offset
   LDR      R14,Source_Line
   LDR      R1,Source_Line_Num
   SUB      R14,R14,#1
   ADD      R1,R1,R14
   STR      R1,Source_Line_Num
   LDR      R1,[R0,#8]
   STR      R1,Source_Line             ; Set Source_Line to Previous_Line of Current_Offset
   ADD      R0,R3,R2
   ADD      R0,R0,#12
   STR      R0,Source_Filename         ; Set Source_Filename to Filename of Previous_Offset
   BL       Find_LeafName
   STR      R0,Source_LeafName
   MOV      R8,#':'
   LDMFD    R13!,{R15}
