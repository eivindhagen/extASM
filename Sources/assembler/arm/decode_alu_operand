
; >-------------------------------------------------------------<

.Decode_Rd_Register
   Decode_X_Register Rd_Pos

; >-------------------------------------------------------------<

.Decode_Rn_Register
   Decode_X_Register Rn_Pos

; >-------------------------------------------------------------<

.Decode_Rm_Register
   Decode_X_Register Rm_Pos

; >-------------------------------------------------------------<

.Decode_Rs_Register
   Decode_X_Register Rs_Pos

; >-------------------------------------------------------------<

.Decode_Destination_Register           ;_R8 = Blank, ~R0 = Register, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Ensure_Blank
   BL       Decode_Register
   ORR      R9,R9,R0,LSL #Rd_Pos
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Decode_Operand_Rd_Register            ;_R8 = Blank, ~R0 = Register, ~R8 = Next char
   Decode_Operand_Register Rd_Pos

; >-------------------------------------------------------------<

.Decode_Operand_Rn_Register            ;_R8 = "," or Blank, ~R0 = Register, ~R8 = Next char
   Decode_Operand_Register Rn_Pos

; >-------------------------------------------------------------<

.Decode_Operand_Rm_Register            ;_R8 = "," or Blank, ~R0 = Register, ~R8 = Next char
   Decode_Operand_Register Rm_Pos

; >-------------------------------------------------------------<

.Decode_Operand_Rs_Register            ;_R8 = "," or Blank, ~R0 = Register, ~R8 = Next char
   Decode_Operand_Register Rs_Pos

; >-------------------------------------------------------------<

.Decode_Operand_Two                    ;_R8 = "," or Blank, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Decode_Operand_Two_Value
   TST      R9,#Immediate_Bit
   BNE      DOT_Not_Write_Instruction
   ORR      R9,R9,R0
   BL       Write_Instruction
   LDMFD    R13!,{R15}

.DOT_Not_Write_Instruction
   MOV      R1,#1
   BL       Code_Instruction
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Decode_Operand_Two_Value              ;_R8 = "," or Blank, ~R0 = Operand two, ~R8 = Next char
   STMFD    R13!,{R4,R14}
   BL       Ensure_Comma
   BL       Skip_Blanks

   CMP      R8,#'#'                    ; Immediate constant ?
   BEQ      DOT_Immediate              ; If not, must be a register

   BL       Decode_Register            ;_R0 = Operand two register
   MOV      R4,R0
   BL       Decode_Shift               ;_R0 = Shift bits [8]
   ORR      R0,R4,R0,LSL #4            ; Insert Shift bits
   LDMFD    R13!,{R4,R15}

.DOT_Immediate                         ;_R8 = "#"
   ORR      R9,R9,#Immediate_Bit
   LDRB     R8,[R10],#1
   BL       Decode_Int_Expr
   LDMFD    R13!,{R4,R15}

; >-------------------------------------------------------------<

.Decode_Operand_Two_Register           ;_R8 = "," or Blank, ~R0 = Register, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Ensure_Comma
   BL       Decode_Register
   ORR      R9,R9,R0
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Decode_Operand_Register               ;_R8 = "," or Blank, ~R0 = Register, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Ensure_Comma
   BL       Decode_Register
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Decode_Operand_Immediate              ;_R8 = "," or Blank, ~R0 = Value, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Ensure_Comma
   BL       Decode_Immediate
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Decode_Immediate                      ;_R8 = "#" or Blank, ~R0 = Value, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Ensure_Pound
   BL       Decode_Int_Expr
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

.Decode_Immediate_Optional_Pound       ;_R8 = "#" or any char, ~R0 = Value, ~R8 = Next char
   STMFD    R13!,{R14}
   BL       Optional_Pound
   BL       Decode_Int_Expr
   LDMFD    R13!,{R15}

; >-------------------------------------------------------------<

macro Decode_X_Register Shift:i
{
   STMFD    R13!,{R14}
   BL       Decode_Register
   ORR      R9,R9,R0,LSL #Shift
   LDMFD    R13!,{R15}
}

; >-------------------------------------------------------------<

macro Decode_Operand_Register Shift:i
{
   STMFD    R13!,{R14}
   BL       Ensure_Comma
   BL       Decode_Register
   ORR      R9,R9,R0,LSL #Shift
   LDMFD    R13!,{R15}
}
