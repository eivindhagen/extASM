
; >-------------------------------------------------------------<
; VLD3/VST3
; >-------------------------------------------------------------<
;
; R4 - Size
; R5 - Number of registers
; R6 - Vd / spacing
; R7 - Index

.DT_VLD3_VST3                          ;_R8 = "1"
   LDRB     R8,[R10],#1
   BL       Decode_VFP_Operand_Type
   CMP      R0,#VFP_Operand_64
   BEQ      DT_Illegal_Operand_Type
   MOV      R4,R0
   BL       Ensure_Blank
   BL       Decode_Structure_Register_List
   MOV      R5,R14
   AND      R6,R0,#&1F
   MOV      R7,R0,LSR #24
   AND      R7,R7,#&F
   AND      R14,R6,#&F
   ORR      R9,R9,R14,LSL #Rd_Pos
   TST      R0,#1 << 4
   ORRNE    R9,R9,#1 << VFP_D_Pos
   AND      R14,R0,#&F0000000
   CMP      R14,#Register_List_Single_Lane
   BEQ      DT_VLS3_Single_Lane
   CMP      R14,#Register_List_All_Lanes
   BEQ      DT_VLS3_All_Lanes
   ;                                        size
   ;------> xxx1 (multiple)  DL [Rn][Vd]type  al[Rm]
   ORR      R9,R9,#%11110100000000000000000000000000
   ORR      R9,R9,R4,LSL #6
   CMP      R5,#3
   BNE      DT_Bad_Register_List
   SUB      R1,R1,#1
   SUB      R2,R2,#2
   CMP      R0,R1
   CMPEQ    R0,R2
   ORREQ    R9,R9,#%0100 << 8
   BEQ      DT_VLS3_Multiple_List_Done
   SUB      R1,R1,#1
   SUB      R2,R2,#2
   CMP      R0,R1
   CMPEQ    R0,R2
   BNE      DT_Bad_Register_List
   ORR      R9,R9,#%0101 << 8

.DT_VLS3_Multiple_List_Done
   BL       Ensure_Comma
   BL       Ensure_Open_Bracket
   BL       Decode_Rn_Register
   CMP      R8,#'@'
   BNE      DT_VLSx_End
   LDRB     R8,[R10],#1
   BL       Decode_Value
   CMP      R1,#FP_Value
   FIXEQZ   R0,F0
   BGT      Mismatch_Num
   CMP      R0,#64
   BNE      DT_Bad_Alignment
   ORR      R9,R9,#%01 << 4
   B        DT_VLSx_End

; >-------------------------------------------------------------<

.DT_VLS3_Single_Lane
   CMP      R4,#VFP_Operand_64
   BEQ      DT_Illegal_Operand_Type
   ;------> xxx1 (single)    DL [Rn][Vd]sz  type[Rm]
   ORR      R9,R9,#%11110100100000000000001000000000
   ORR      R9,R9,R4,LSL #10
   CMP      R5,#3
   AND      R14,R1,#&F0000000
   CMPEQ    R14,#Register_List_Single_Lane
   AND      R14,R2,#&F0000000
   CMPEQ    R14,#Register_List_Single_Lane
   BNE      DT_Bad_Register_List
   AND      R1,R1,#&1F
   AND      R2,R2,#&1F
   SUB      R1,R1,#1
   SUB      R2,R2,#2
   CMP      R6,R1
   CMPEQ    R6,R2
   MOVEQ    R6,#0
   BEQ      DT_VLS3_Spacing_Done
   SUB      R1,R1,#1
   SUB      R2,R2,#2
   CMP      R6,R1
   CMPEQ    R6,R2
   BNE      DT_Bad_Register_List
   CMP      R4,#VFP_Operand_8
   BEQ      DT_Bad_Register_List
   MOV      R6,#1

.DT_VLS3_Spacing_Done
   BL       Ensure_Comma
   BL       Ensure_Open_Bracket
   BL       Decode_Rn_Register
   CMP      R4,#VFP_Operand_8
   ORREQ    R9,R9,R7,LSL #5
   BEQ      DT_VLSx_End
   CMP      R4,#VFP_Operand_16
   ORREQ    R9,R9,R7,LSL #6
   ORREQ    R9,R9,R6,LSL #5
   BEQ      DT_VLSx_End
   ORR      R9,R9,R7,LSL #7
   ORREQ    R9,R9,R6,LSL #6
   B        DT_VLSx_End

; >-------------------------------------------------------------<

.DT_VLS3_All_Lanes
   CMP      R4,#VFP_Operand_64
   BEQ      DT_Illegal_Operand_Type
   ;------> xxx1 (all)       DL [Rn][Vd]    szTa[Rm]
   ORR      R9,R9,#%11110100100000000000111000000000
   ORR      R9,R9,R4,LSL #6
   CMP      R5,#3
   AND      R14,R1,#&F0000000
   CMPEQ    R14,#Register_List_All_Lanes
   AND      R14,R2,#&F0000000
   CMPEQ    R14,#Register_List_All_Lanes
   BNE      DT_Bad_Register_List
   AND      R1,R1,#&1F
   AND      R2,R2,#&1F
   SUB      R1,R1,#1
   SUB      R2,R2,#2
   CMP      R6,R1
   CMPEQ    R6,R2
   BEQ      DT_VLS3_All_Lanes_Spacing_Done
   SUB      R1,R1,#1
   SUB      R2,R2,#2
   CMP      R6,R1
   CMPEQ    R6,R2
   BNE      DT_Bad_Register_List
   ORR      R9,R9,#1 << 5

.DT_VLS3_All_Lanes_Spacing_Done
   BL       Ensure_Comma
   BL       Ensure_Open_Bracket
   BL       Decode_Rn_Register
   B        DT_VLSx_End
