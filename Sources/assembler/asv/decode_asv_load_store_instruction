
; >-------------------------------------------------------------<

.DT_VLD                                ;_R8 = "L"
   LDRB     R8,[R10],#1
   BIC      R8,R8,#32
   CMP      R8,#'D'
   BNE      DT_Unknown
   LDRB     R8,[R10],#1
   MOV      R9,#Multiplexed_Load_Bit
   CMP      R8,#'1'
   BEQ      DT_VLD1_VST1
   CMP      R8,#'2'
   BEQ      DT_VLD2_VST2
   CMP      R8,#'3'
   BEQ      DT_VLD3_VST3
   CMP      R8,#'4'
   BEQ      DT_VLD4_VST4
   BIC      R8,R8,#32
   CMP      R8,#'M'
   MOVEQ    R9,#Load_Bit
   BEQ      DT_VLDM_VSTM
   CMP      R8,#'R'
   MOVEQ    R9,#Load_Bit
   BEQ      DT_VLDR_VSTR
   B        DT_Unknown

; >-------------------------------------------------------------<

.DT_VST                                ;_R8 = "T"
   LDRB     R8,[R10],#1
   MOV      R9,#0
   CMP      R8,#'1'
   BEQ      DT_VLD1_VST1
   CMP      R8,#'2'
   BEQ      DT_VLD2_VST2
   CMP      R8,#'3'
   BEQ      DT_VLD3_VST3
   CMP      R8,#'4'
   BEQ      DT_VLD4_VST4
   BIC      R8,R8,#32
   CMP      R8,#'M'
   BEQ      DT_VLDM_VSTM
   CMP      R8,#'R'
   BEQ      DT_VLDR_VSTR
   B        DT_Unknown

; >-------------------------------------------------------------<

.DT_VPOP                               ;_R8 = "O"
   LDRB     R8,[R10],#1
   BIC      R8,R8,#32
   CMP      R8,#'P'
   BNE      DT_Unknown
   ;------> VPOP Cond     D      [Vd]    [offset]
   MOV      R9,#%00001100101111010000101000000000
   LDRB     R8,[R10],#1
   BL       Decode_ConditionCode
   B        DT_FLDM_FSTM_VLDM_VSTM_Decode_List

; >-------------------------------------------------------------<

.DT_VPUSH                              ;_R8 = "U"
   LDRB     R8,[R10],#1
   BIC      R8,R8,#32
   CMP      R8,#'S'
   BNE      DT_Unknown
   LDRB     R8,[R10],#1
   BIC      R8,R8,#32
   CMP      R8,#'H'
   BNE      DT_Unknown
   ;------> VPUSH Cond     D      [Vd]    [offset]
   MOV      R9,# %00001101001011010000101000000000
   LDRB     R8,[R10],#1
   BL       Decode_ConditionCode
   B        DT_FLDM_FSTM_VLDM_VSTM_Decode_List

; >-------------------------------------------------------------<

.DT_VLDR_VSTR                          ;_R8 = "R"
   LDRB     R8,[R10],#1
   BL       Decode_ConditionCode
   BL       Decode_VFP_Destination_Register
   BL       Set_VFP_Register_Type
   B        DT_FLD_FST_VLDR_VSTR

; >-------------------------------------------------------------<

.DT_VLDM_VSTM                          ;_R8 = "M"
   LDRB     R8,[R10],#1
   BL       Decode_Load_Store_Multiple_Addressing_Mode
   B        DT_FLDM_FSTM_VLDM_VSTM

; >-------------------------------------------------------------<

.DT_VLSx_End
   BL       Ensure_Close_Bracket
   BL       Skip_Blanks
   CMP      R8,#'!'
   ORREQ    R9,R9,#%1101 << Rm_Pos
   LDREQB   R8,[R10],#1
   BEQ      DT_Write_Instruction
   CMP      R8,#','
   ORRNE    R9,R9,#%1111 << Rm_Pos
   BNE      DT_Write_Instruction
   LDRB     R8,[R10],#1
   BL       Decode_Rm_Register
   B        DT_Write_Instruction
