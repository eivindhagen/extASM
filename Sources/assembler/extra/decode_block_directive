
; >-------------------------------------------------------------<

.DT_DBB_DBD_DBF_DBW                    ;_R8 = "B"
   LDRB     R8,[R10],#1
   BIC      R8,R8,#32
   CMP      R8,#'B'
   BEQ      DT_DBB
   CMP      R8,#'D'
   BEQ      DT_DBD
   CMP      R8,#'F'
   BEQ      DT_DBF
   CMP      R8,#'W'
   BEQ      DT_DBW
   B        DT_Unknown

; >-------------------------------------------------------------<

.DT_DBB
   LDRB     R8,[R10],#1
   BL       Ensure_Blank
   BL       Decode_Block
   CMP      R0,#0
   BLE      DT_End
   BICS     R2,R1,#&FF
   MOVNE    R0,#&38                    ; Asm_Error #&38 = Number too big, 8 bit only
   BNE      Asm_Error
   LDR      R2,Object_Size
   ADD      R2,R2,R0                   ; Add bytes
   STR      R2,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   MOV      R5,R1
   BL       Check_WorkSpace

._Loop
   STRB     R5,[R11],#1
   SUBS     R4,R4,#1
   BNE      _Loop
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBD
   LDRB     R8,[R10],#1
   BL       Ensure_Blank
   TST      R11,#3                     ; Testing for Word-alignment
   BEQ      DTDBD_Word
   MOV      R0,#&03                    ; Asm_Warning #&03 = Data not word-aligned
   BL       Asm_Warning
   BL       Align_PC

.DTDBD_Word
   BL       Decode_Block
   CMP      R0,#0
   BLE      DT_End
   LDR      R2,Object_Size
   ADD      R2,R2,R0,LSL #2            ; Add doubles
   STR      R2,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   MOV      R5,R1
   BL       Check_WorkSpace

._Loop
   STR      R5,[R11],#4
   SUBS     R4,R4,#1
   BNE      _Loop
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBF                                ;_R8 = "F"
   LDRB     R8,[R10],#1                ; Should be "D", "E", "P" or "S"
   BIC      R8,R8,#32
   CMP      R8,#'S'
   MOVEQ    R4,#0
   BEQ      DT_DBFx
   CMP      R8,#'D'
   MOVEQ    R4,#1
   BEQ      DT_DBFx
   CMP      R8,#'P'
   MOVEQ    R4,#3
   BEQ      DT_DBFx
   CMP      R8,#'E'
   BNE      DT_Unknown
   MOVEQ    R4,#2
   LDRB     R0,[R10]
   BIC      R0,R0,#32
   CMP      R0,#'P'
   MOVEQ    R4,#4
   LDREQB   R8,[R10],#1

; >-------------------------------------------------------------<

.DT_DBFx                               ;_R4 = Floating point format (0=S,1=D,2=E,3=P,4=EP)
   LDRB     R8,[R10],#1
   BL       Ensure_Blank
   TST      R11,#3                     ; Testing for Word-alignment
   BEQ      DTDBF_Word
   MOV      R0,#&03                    ; Asm_Warning #&03 = Data not word-aligned
   BL       Asm_Warning
   BL       Align_PC

.DTDBF_Word
   BL       Decode_FP_Block
   CMP      R0,#0
   BLE      DT_End
   ADD      R15,R15,R4,LSL #2
   MOV      R0,R0
   B        DT_DBFS
   B        DT_DBFD
   B        DT_DBFE
   B        DT_DBFP
   B        DT_DBFEP

; >-------------------------------------------------------------<

.DT_DBFS
   LDR      R1,Object_Size
   ADD      R1,R1,R0,LSL #2
   STR      R1,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   BL       Check_WorkSpace
   RFS      R0
   BIC      R1,R0,#1 << 18             ; Clear Overflow trap bit
   WFS      R1
   MVFS     F1,F0
   RFS      R2
   WFS      R0                         ; Restore trap bit
   TST      R2,#1 << 2
   MOVNE    R0,#&44                    ; Asm_Error #&44 = Floating Point number too big for chosen precision
   BNE      Asm_Error

._Loop
   STFS     F0,[R11],#4
   SUBS     R4,R4,#1
   BNE      _Loop
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBFD
   LDR      R1,Object_Size
   ADD      R1,R1,R0,LSL #3
   STR      R1,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   BL       Check_WorkSpace
   RFS      R0
   BIC      R1,R0,#1 << 18             ; Clear Overflow trap bit
   WFS      R1
   MVFD     F1,F0
   RFS      R2
   WFS      R0                         ; Restore trap bit
   TST      R2,#1 << 2
   MOVNE    R0,#&44                    ; Asm_Error #&44 = Floating Point number too big for chosen precision
   BNE      Asm_Error

._Loop
   STFD     F0,[R11],#8
   SUBS     R4,R4,#1
   BNE      _Loop
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBFE
   LDR      R1,Object_Size
   ADD      R2,R0,R0,LSL #1
   ADD      R1,R1,R2,LSL #2
   STR      R1,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   BL       Check_WorkSpace

._Loop
   STFE     F0,[R11],#12
   SUBS     R4,R4,#1
   BNE      _Loop
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBFP
   LDR      R1,Object_Size
   ADD      R2,R0,R0,LSL #1
   ADD      R1,R1,R2,LSL #2
   STR      R1,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   BL       Check_WorkSpace
   RFS      R1
   BIC      R2,R1,#1 << 11
   WFS      R2

._Loop
   STFP     F0,[R11],#12
   SUBS     R4,R4,#1
   BNE      _Loop
   WFS      R1
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBFEP
   LDR      R1,Object_Size
   ADD      R1,R1,R0,LSL #4
   STR      R1,Object_Size
   MOV      R4,R0
   BL       Check_WorkSpace
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   RFS      R1
   ORR      R2,R1,#1 << 11
   WFS      R2

._Loop
   STFP     F0,[R11],#16
   SUBS     R4,R4,#1
   BNE      _Loop
   WFS      R1
   B        DT_End

; >-------------------------------------------------------------<

.DT_DBW
   LDRB     R8,[R10],#1
   BL       Ensure_Blank
   TST      R11,#1                     ; Testing for HalfWord-alignment
   BEQ      DTDBW_HalfWord
   MOV      R0,#&04                    ; Asm_Warning #&04 = Data not halfword-aligned
   BL       Asm_Warning
   BL       Align_PC

.DTDBW_HalfWord
   BL       Decode_Block
   CMP      R0,#0
   BLE      DT_End
   BICS     R2,R1,#&FFFF
   MOVNE    R0,#&39                    ; Asm_Error #&39 = Number too big, 16 bit only
   BNE      Asm_Error
   LDR      R2,Object_Size
   ADD      R2,R2,R0,LSL #1            ; Add words
   STR      R2,Object_Size
   LDR      R2,Virtual_Flag
   CMP      R2,#1
   BEQ      DT_End

   MOV      R4,R0
   MOV      R5,R1
   BL       Check_WorkSpace
   MOV      R0,R5,LSR #8

._Loop
   STRB     R5,[R11],#1
   STRB     R0,[R11],#1
   SUBS     R4,R4,#1
   BNE      _Loop
   B        DT_End

; >-------------------------------------------------------------<

.Decode_Block                          ;_R8 = First char, ~R0 = Entries, ~R1 = Content, ~R8 = Next char
   STMFD    R13!,{R4,R14}
   BL       Decode_Int_Expr
   MOV      R1,#0
   BL       Skip_Blanks
   CMP      R8,#','
   LDMNEFD  R13!,{R4,R15}
   MOV      R4,R0
   LDRB     R8,[R10],#1
   BL       Decode_Int_Expr
   MOV      R1,R0
   MOV      R0,R4
   LDMFD    R13!,{R4,R15}

; >-------------------------------------------------------------<

.Decode_FP_Block                       ;_R8 = First char, ~R0 = Entries, ~F0 = Content, ~R8 = Next char
   STMFD    R13!,{R4,R14}
   BL       Decode_Int_Expr
   MVFE     F0,#0
   BL       Skip_Blanks
   CMP      R8,#','
   LDMNEFD  R13!,{R4,R15}
   MOV      R4,R0
   LDRB     R8,[R10],#1
   BL       Decode_Int_Expr
   MOV      R0,R4
   LDMFD    R13!,{R4,R15}
